{"mappings":"AAAA;AAEA,MAAM,iBAAiB;AACvB,MAAM,eAAe;AAErB,MAAM,eAAe,IAAI,QAAQ,CAAC,SAAS;IACzC,MAAM,sBAAsB;QAC1B,SAAS,mBAAmB,CAAC,SAAS;QACtC,aAAa;QACb,QAAQ,CAAC,MAAM,EAAE,eAAe,CAAC;IACnC;IAEA,SAAS,gBAAgB,CAAC,SAAS;IAEnC,MAAM,YAAY,WAAW;QAC3B,SAAS,mBAAmB,CAAC,SAAS;QAEtC,MAAM,QAAQ,IAAI,MAAM,CAAC,MAAM,EAAE,aAAa,CAAC;QAE/C,OAAO;IACT,GAAG;AACL;AAEA,MAAM,gBAAgB,QAAQ,IAAI,CAAC;IACjC,IAAI,QAAQ,CAAA;QACV,MAAM,kBAAkB;YACtB,SAAS,mBAAmB,CAAC,SAAS;YACtC,QAAQ,CAAC,OAAO,EAAE,eAAe,CAAC;QACpC;QAEA,SAAS,gBAAgB,CAAC,SAAS;IACrC;IAEA,IAAI,QAAQ,CAAA;QACV,MAAM,mBAAmB,CAAC;YACxB,EAAE,cAAc;YAChB,SAAS,mBAAmB,CAAC,eAAe;YAC5C,QAAQ,CAAC,OAAO,EAAE,eAAe,CAAC;QACpC;QAEA,SAAS,gBAAgB,CAAC,eAAe;IAC3C;CACD;AAED,MAAM,eAAe,QAAQ,GAAG,CAAC;IAC/B,IAAI,QAAQ,CAAC;QACX,MAAM,mBAAmB;YACvB,SAAS,mBAAmB,CAAC,SAAS;YACtC,QAAQ;QACV;QAEA,SAAS,gBAAgB,CAAC,SAAS;IACrC;IACA,IAAI,QAAQ,CAAC;QACX,MAAM,oBAAoB,CAAC;YACzB,EAAE,cAAc;YAChB,SAAS,mBAAmB,CAAC,eAAe;YAC5C,QAAQ;QACV;QAEA,SAAS,gBAAgB,CAAC,eAAe;IAC3C;CACD,EAAE,IAAI,CAAC,IAAM,CAAC,MAAM,EAAE,eAAe,CAAC;AAEvC,MAAM,gBAAgB,CAAC;IACrB,OAAO,QACJ,IAAI,CAAC,CAAC,UAAY,iBAAiB,WAAW,UAC9C,KAAK,CAAC,CAAC,UAAY,iBAAiB,WAAW;AACpD;AAEA,MAAM,mBAAmB,CAAC,MAAM;IAC9B,MAAM,sBAAsB,SAAS,aAAa,CAAC;IAEnD,oBAAoB,WAAW,GAAG;IAClC,oBAAoB,SAAS,GAAG,CAAC,aAAa,EAAE,KAAK,CAAC;IACtD,SAAS,IAAI,CAAC,WAAW,CAAC;AAC5B;AAEA,cAAc,cACX,IAAI,CAAC,IAAM,cAAc,gBACzB,IAAI,CAAC,IAAM,cAAc","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nconst successMessage = 'promise was resolved';\nconst errorMessage = 'promise was rejected';\n\nconst firstPromise = new Promise((resolve, reject) => {\n  const handleDocumentClick = () => {\n    document.removeEventListener('click', handleDocumentClick);\n    clearTimeout(timeoutId);\n    resolve(`First ${successMessage}`);\n  };\n\n  document.addEventListener('click', handleDocumentClick);\n\n  const timeoutId = setTimeout(() => {\n    document.removeEventListener('click', handleDocumentClick);\n\n    const error = new Error(`First ${errorMessage}`);\n\n    reject(error);\n  }, 3000);\n});\n\nconst secondPromise = Promise.race([\n  new Promise(resolve => {\n    const handleLeftClick = () => {\n      document.removeEventListener('click', handleLeftClick);\n      resolve(`Second ${successMessage}`);\n    };\n\n    document.addEventListener('click', handleLeftClick);\n  }),\n\n  new Promise(resolve => {\n    const handleRightClick = (e) => {\n      e.preventDefault();\n      document.removeEventListener('contextmenu', handleRightClick);\n      resolve(`Second ${successMessage}`);\n    };\n\n    document.addEventListener('contextmenu', handleRightClick);\n  }),\n]);\n\nconst thirdPromise = Promise.all([\n  new Promise((resolve) => {\n    const leftClickHandler = () => {\n      document.removeEventListener('click', leftClickHandler);\n      resolve('Left click');\n    };\n\n    document.addEventListener('click', leftClickHandler);\n  }),\n  new Promise((resolve) => {\n    const rightClickHandler = (e) => {\n      e.preventDefault();\n      document.removeEventListener('contextmenu', rightClickHandler);\n      resolve('Right click');\n    };\n\n    document.addEventListener('contextmenu', rightClickHandler);\n  }),\n]).then(() => `Third ${successMessage}`);\n\nconst handlePromise = (promise) => {\n  return promise\n    .then((message) => showNotification('success', message))\n    .catch((message) => showNotification('warning', message));\n};\n\nconst showNotification = (type, message) => {\n  const notificationElement = document.createElement('div');\n\n  notificationElement.textContent = message;\n  notificationElement.className = `notification ${type}`;\n  document.body.appendChild(notificationElement);\n};\n\nhandlePromise(firstPromise)\n  .then(() => handlePromise(secondPromise))\n  .then(() => handlePromise(thirdPromise));\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}